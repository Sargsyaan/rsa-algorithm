{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { ElementRef, Inject, Renderer2, ChangeDetectorRef, NgZone, ViewChild, Input, HostBinding, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { typedFromEvent, isCurrentTarget, tuiDefaultProp, tuiPure, TuiResizeModule } from '@taiga-ui/cdk';\nimport { PolymorpheusOutletComponent, PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport { BehaviorSubject, of } from 'rxjs';\nimport { startWith, pairwise, switchMap, filter, mapTo } from 'rxjs/operators';\nimport { CommonModule } from '@angular/common';\nimport { TuiHintModule } from '@taiga-ui/core';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc2 from '@taiga-ui/core';\nimport * as ɵngcc3 from '@taiga-ui/cdk';\nimport * as ɵngcc4 from '@angular/common';\nlet TuiLineClampComponent = /*#__PURE__*/(() => {\n  let TuiLineClampComponent = class TuiLineClampComponent {\n    constructor(elementRef, renderer, cd, ngZone) {\n      this.elementRef = elementRef;\n      this.renderer = renderer;\n      this.cd = cd;\n      this.ngZone = ngZone;\n      this.linesLimit$ = new BehaviorSubject(1);\n      this.initialized = false;\n      this.lineHeight = 24;\n      this.content = '';\n      this.skipInitialTransition();\n    }\n\n    set linesLimit(linesLimit) {\n      this.linesLimit$.next(linesLimit);\n    }\n\n    get lineClamp$() {\n      return this.linesLimit$.pipe(startWith(1), pairwise(), switchMap(([prev, next]) => next >= prev ? of(next) : typedFromEvent(this.elementRef.nativeElement, 'transitionend').pipe(filter(isCurrentTarget), mapTo(next))));\n    }\n\n    get overflown() {\n      if (!this.outlet) {\n        return false;\n      }\n\n      const {\n        scrollHeight,\n        scrollWidth\n      } = this.outlet.nativeElement;\n      const {\n        clientHeight,\n        clientWidth\n      } = this.elementRef.nativeElement; // 4px buffer for IE/Edge incorrectly rounding scrollHeight\n\n      return scrollHeight - clientHeight > 4 || scrollWidth - clientWidth > 0;\n    }\n\n    get computedContent() {\n      return this.overflown ? this.content : '';\n    }\n\n    get maxHeight() {\n      return this.initialized ? this.lineHeight * this.linesLimit$.value : null;\n    }\n\n    get height() {\n      return !this.outlet ? 0 : this.outlet.nativeElement.scrollHeight + 4 || null;\n    }\n\n    updateView() {\n      this.cd.detectChanges();\n    }\n\n    ngAfterViewInit() {\n      this.initialized = true;\n    }\n\n    skipInitialTransition() {\n      this.ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          this.renderer.addClass(this.elementRef.nativeElement, '_initialized');\n          this.cd.detectChanges();\n        });\n      });\n    }\n\n  };\n\n  TuiLineClampComponent.ɵfac = function TuiLineClampComponent_Factory(t) {\n    return new (t || TuiLineClampComponent)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgZone));\n  };\n\n  TuiLineClampComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: TuiLineClampComponent,\n    selectors: [[\"tui-line-clamp\"]],\n    viewQuery: function TuiLineClampComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PolymorpheusOutletComponent, 5, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.outlet = _t.first);\n      }\n    },\n    hostVars: 4,\n    hostBindings: function TuiLineClampComponent_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"max-height\", ctx.maxHeight, \"px\")(\"height\", ctx.height, \"px\");\n      }\n    },\n    inputs: {\n      lineHeight: \"lineHeight\",\n      content: \"content\",\n      linesLimit: \"linesLimit\"\n    },\n    decls: 2,\n    vars: 6,\n    consts: [[\"polymorpheus-outlet\", \"\", \"tuiHintId\", \"unnecessary\", \"tuiHintMode\", \"overflow\", 1, \"wrapper\", 3, \"tuiHint\", \"content\", \"tuiResize\"]],\n    template: function TuiLineClampComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"tuiResize\", function TuiLineClampComponent_Template_div_tuiResize_0_listener() {\n          return ctx.updateView();\n        });\n        ɵngcc0.ɵɵpipe(1, \"async\");\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"-webkit-line-clamp\", ɵngcc0.ɵɵpipeBind1(1, 4, ctx.lineClamp$));\n        ɵngcc0.ɵɵproperty(\"tuiHint\", ctx.computedContent)(\"content\", ctx.content);\n      }\n    },\n    directives: [ɵngcc1.PolymorpheusOutletComponent, ɵngcc2.TuiHintDirective, ɵngcc3.TuiResizeDirective],\n    pipes: [ɵngcc4.AsyncPipe],\n    styles: [\"[_nghost-%COMP%]{position:relative;display:block;overflow:hidden}._initialized[_nghost-%COMP%]{transition-property:max-height;transition-duration:var(--tui-duration,300ms);transition-timing-function:ease-in-out}.wrapper[_ngcontent-%COMP%]{display:-webkit-box;-webkit-box-orient:vertical;overflow:hidden}\"],\n    changeDetection: 0\n  });\n\n  __decorate([ViewChild(PolymorpheusOutletComponent, {\n    read: ElementRef\n  })], TuiLineClampComponent.prototype, \"outlet\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiLineClampComponent.prototype, \"linesLimit\", null);\n\n  __decorate([Input(), tuiDefaultProp()], TuiLineClampComponent.prototype, \"lineHeight\", void 0);\n\n  __decorate([Input(), tuiDefaultProp()], TuiLineClampComponent.prototype, \"content\", void 0);\n\n  __decorate([tuiPure], TuiLineClampComponent.prototype, \"lineClamp$\", null);\n\n  __decorate([HostBinding('style.maxHeight.px')], TuiLineClampComponent.prototype, \"maxHeight\", null);\n\n  __decorate([HostBinding('style.height.px')], TuiLineClampComponent.prototype, \"height\", null);\n\n  TuiLineClampComponent = __decorate([__param(0, Inject(ElementRef)), __param(1, Inject(Renderer2)), __param(2, Inject(ChangeDetectorRef)), __param(3, Inject(NgZone))], TuiLineClampComponent);\n  return TuiLineClampComponent;\n})();\nlet TuiLineClampModule = /*#__PURE__*/(() => {\n  let TuiLineClampModule = class TuiLineClampModule {};\n\n  TuiLineClampModule.ɵfac = function TuiLineClampModule_Factory(t) {\n    return new (t || TuiLineClampModule)();\n  };\n\n  TuiLineClampModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiLineClampModule\n  });\n  TuiLineClampModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, PolymorpheusModule, TuiHintModule, TuiResizeModule]]\n  });\n  return TuiLineClampModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiLineClampModule, {\n    declarations: function () {\n      return [TuiLineClampComponent];\n    },\n    imports: function () {\n      return [CommonModule, PolymorpheusModule, TuiHintModule, TuiResizeModule];\n    },\n    exports: function () {\n      return [TuiLineClampComponent];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiLineClampComponent, TuiLineClampModule }; //# sourceMappingURL=taiga-ui-kit-components-line-clamp.js.map","map":null,"metadata":{},"sourceType":"module"}