{"ast":null,"code":"import { __decorate, __param } from 'tslib';\nimport { Optional, Self, Inject, ChangeDetectorRef, ElementRef, ViewChildren, ViewChild, Input, HostBinding, Component, ChangeDetectionStrategy, forwardRef, Directive, NgModule } from '@angular/core';\nimport { NgControl, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EMPTY_QUERY, isNativeFocusedIn, isNativeFocused, round, clamp, TUI_IS_MOBILE, tuiDefaultProp, TUI_FOCUSABLE_ITEM_ACCESSOR, TuiActiveZoneModule, TuiPressedModule } from '@taiga-ui/cdk';\nimport { getFractionPartPadded, TUI_TEXTFIELD_APPEARANCE, TuiTextfieldController, TUI_TEXTFIELD_WATCHED_CONTROLLER, TEXTFIELD_CONTROLLER_PROVIDER, TuiTextfieldControllerModule, TuiWrapperModule } from '@taiga-ui/core';\nimport { AbstractTuiInputSlider, quantumAssertion } from '@taiga-ui/kit/abstract';\nimport { TuiInputNumberComponent, TuiInputNumberModule } from '@taiga-ui/kit/components/input-number';\nimport { TuiNewRangeDirective, TuiRangeComponent, TuiRangeModule } from '@taiga-ui/kit/components/range';\nimport { TUI_FLOATING_PRECISION } from '@taiga-ui/kit/constants';\nimport { CommonModule } from '@angular/common';\nimport { PolymorpheusModule } from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@taiga-ui/core';\nimport * as ɵngcc2 from '@taiga-ui/cdk';\nimport * as ɵngcc3 from '@taiga-ui/kit/components/input-number';\nimport * as ɵngcc4 from '@angular/forms';\nimport * as ɵngcc5 from '@angular/common';\nimport * as ɵngcc6 from '@tinkoff/ng-polymorpheus';\nimport * as ɵngcc7 from '@taiga-ui/kit/components/range';\n\nconst _c0 = function (a0) {\n  return {\n    $implicit: a0\n  };\n};\n\nfunction TuiInputRangeComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n\n    const _r3 = ɵngcc0.ɵɵreference(11);\n\n    ɵngcc0.ɵɵproperty(\"content\", ctx_r0.minLabel ? _r3 : ctx_r0.leftValueContent)(\"context\", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r0.value[0]));\n  }\n}\n\nfunction TuiInputRangeComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 9);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n\n    const _r5 = ɵngcc0.ɵɵreference(13);\n\n    ɵngcc0.ɵɵproperty(\"content\", ctx_r1.maxLabel ? _r5 : ctx_r1.rightValueContent)(\"context\", ɵngcc0.ɵɵpureFunction1(2, _c0, ctx_r1.value[1]));\n  }\n}\n\nfunction TuiInputRangeComponent_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 10);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"i18nPlural\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \\u00A0\", ɵngcc0.ɵɵpipeBind2(2, 1, ctx_r2.value[1], ctx_r2.pluralizeMap), \" \");\n  }\n}\n\nfunction TuiInputRangeComponent_ng_template_10_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r8.minLabel);\n  }\n}\n\nfunction TuiInputRangeComponent_ng_template_10_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"i18nPlural\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const value_r7 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r9 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", value_r7, \"\\u00A0\", ɵngcc0.ɵɵpipeBind2(2, 2, value_r7, ctx_r9.pluralizeMap || ctx_r9.pluralizeMapFallback), \" \");\n  }\n}\n\nfunction TuiInputRangeComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TuiInputRangeComponent_ng_template_10_ng_container_0_Template, 2, 1, \"ng-container\", 11);\n    ɵngcc0.ɵɵtemplate(1, TuiInputRangeComponent_ng_template_10_ng_container_1_Template, 3, 5, \"ng-container\", 11);\n  }\n\n  if (rf & 2) {\n    const value_r7 = ctx.$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", value_r7 === ctx_r4.min);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", value_r7 !== ctx_r4.min);\n  }\n}\n\nfunction TuiInputRangeComponent_ng_template_12_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r12.maxLabel);\n  }\n}\n\nfunction TuiInputRangeComponent_ng_template_12_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"i18nPlural\");\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const value_r11 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r13 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", value_r11, \"\\u00A0\", ɵngcc0.ɵɵpipeBind2(2, 2, value_r11, ctx_r13.pluralizeMap || ctx_r13.pluralizeMapFallback), \" \");\n  }\n}\n\nfunction TuiInputRangeComponent_ng_template_12_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, TuiInputRangeComponent_ng_template_12_ng_container_0_Template, 2, 1, \"ng-container\", 11);\n    ɵngcc0.ɵɵtemplate(1, TuiInputRangeComponent_ng_template_12_ng_container_1_Template, 3, 5, \"ng-container\", 11);\n  }\n\n  if (rf & 2) {\n    const value_r11 = ctx.$implicit;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", value_r11 === ctx_r6.max);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", value_r11 !== ctx_r6.max);\n  }\n}\n\nconst _c1 = [\"*\"];\nvar TuiInputRangeComponent_1; // @dynamic\n\nlet TuiInputRangeComponent = TuiInputRangeComponent_1 =\n/**\n * `AbstractTuiInputSlider` includes all legacy code (it can be deleted in v3.0)\n * TODO replace `extends AbstractTuiInputSlider<[number, number]>` by `extends AbstractTuiControl<[number, number]> implements TuiWithOptionalMinMax<number>`\n */\nclass TuiInputRangeComponent extends AbstractTuiInputSlider {\n  constructor(control, changeDetectorRef, isMobile, appearance, elementRef, controller, isNew) {\n    super(control, changeDetectorRef);\n    this.isMobile = isMobile;\n    this.appearance = appearance;\n    this.elementRef = elementRef;\n    this.controller = controller;\n    this.isNew = isNew;\n    this.inputNumberRefs = EMPTY_QUERY;\n    this.rangeRef = null;\n    this.min = 0;\n    /* TODO: make `100` as default value (like in native sliders) */\n\n    this.max = Infinity;\n    this.quantum = 1;\n    this.steps = 0;\n    this.segments = 0;\n    this.keySteps = null;\n    this.leftValueContent = '';\n    this.rightValueContent = '';\n    this.lastActiveSide = 'left';\n  }\n\n  get leftFocusableElement() {\n    var _a;\n\n    return ((_a = this.inputNumberRefs.first) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) || null;\n  }\n\n  get rightFocusableElement() {\n    var _a;\n\n    return ((_a = this.inputNumberRefs.last) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) || null;\n  }\n\n  get nativeFocusableElement() {\n    return this.disabled ? null : this.leftFocusableElement || this.rightFocusableElement;\n  }\n\n  get focused() {\n    return isNativeFocusedIn(this.elementRef.nativeElement);\n  }\n\n  get showLeftValueContent() {\n    var _a;\n\n    return Boolean((this.minLabel || this.leftValueContent) && !isNativeFocused(this.leftFocusableElement) && !(((_a = this.rangeRef) === null || _a === void 0 ? void 0 : _a.focused) && this.lastActiveSide === 'left'));\n  }\n\n  get showRightValueContent() {\n    var _a;\n\n    return Boolean((this.maxLabel || this.rightValueContent) && !isNativeFocused(this.rightFocusableElement) && !(((_a = this.rangeRef) === null || _a === void 0 ? void 0 : _a.focused) && this.lastActiveSide === 'right'));\n  }\n\n  get precision() {\n    return getFractionPartPadded(this.quantum).length;\n  }\n\n  get decimal() {\n    return this.precision ? 'not-zero' : 'never';\n  }\n\n  get computedSteps() {\n    return this.steps || (this.max - this.min) / this.quantum;\n  }\n\n  get computedSize() {\n    return this.isNew && this.controller.size !== 's' ? this.controller.size : this.size;\n  }\n\n  get legacyLabelOutside() {\n    return this.isNew ? this.controller.labelOutside : this.computedSize === 'm';\n  }\n\n  onActiveZone(active) {\n    this.updateFocused(active);\n  }\n\n  onTextInputFocused(focused, right) {\n    if (focused) {\n      return;\n    }\n\n    const [leftTextInputRef, rightTextInputRef] = this.inputNumberRefs;\n    const inputRef = right ? rightTextInputRef : leftTextInputRef;\n    const valueIndex = right ? 1 : 0;\n\n    if (!inputRef.nativeValue || inputRef.value !== this.value[valueIndex]) {\n      this.updateTextInputValue(this.safeCurrentValue[valueIndex], right);\n    }\n  }\n\n  changeByStep(event, [leftCoefficient, rightCoefficient]) {\n    if (this.readOnly) {\n      return;\n    }\n\n    event.preventDefault();\n    const newValue = this.valueGuard([this.value[0] + leftCoefficient * this.step, this.value[1] + rightCoefficient * this.step]);\n    const leftValueChanged = newValue[0] !== this.value[0];\n    const rightValueChanged = newValue[1] !== this.value[1];\n\n    if (leftValueChanged || rightValueChanged) {\n      this.safelyUpdateValue(newValue);\n      this.updateTextInputValue(newValue[rightValueChanged ? 1 : 0], rightValueChanged);\n    }\n  }\n\n  onInputLeft(value) {\n    this.safelyUpdateValue([value !== null && value !== void 0 ? value : this.safeCurrentValue[0], this.value[1]]);\n  }\n\n  onInputRight(value) {\n    this.safelyUpdateValue([this.value[0], value !== null && value !== void 0 ? value : this.safeCurrentValue[1]]);\n  }\n\n  onRangeValue([left, right]) {\n    var _a, _b;\n\n    (_b = (_a = this.rangeRef) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) === null || _b === void 0 ? void 0 : _b.focus();\n    this.safelyUpdateValue([left, right]);\n  }\n\n  focusToTextInput() {\n    const element = this.lastActiveSide === 'left' ? this.leftFocusableElement : this.rightFocusableElement;\n\n    if (!this.isMobile && element) {\n      element.focus();\n    }\n  }\n\n  blurRange() {\n    var _a, _b;\n\n    (_b = (_a = this.rangeRef) === null || _a === void 0 ? void 0 : _a.nativeFocusableElement) === null || _b === void 0 ? void 0 : _b.blur();\n  }\n\n  onActiveThumbChange(activeThumb) {\n    this.lastActiveSide = activeThumb;\n  }\n\n  getFallbackValue() {\n    return [0, 0];\n  }\n\n  safelyUpdateValue(value) {\n    this.updateValue(this.valueGuard(value));\n  }\n\n  valueGuard([leftValue, rightValue]) {\n    const leftCalibratedValue = this.calibrate(leftValue);\n    const rightCalibratedValue = this.calibrate(rightValue);\n    return [Math.min(leftCalibratedValue, this.value[1]), Math.max(rightCalibratedValue, this.value[0])];\n  }\n\n  calibrate(value) {\n    const roundedValue = round(Math.round(value / this.quantum) * this.quantum, TUI_FLOATING_PRECISION);\n    return clamp(roundedValue, this.min, this.max);\n  }\n\n  updateTextInputValue(value, right) {\n    const [leftInputRef, rightInputRef] = this.inputNumberRefs;\n    const textInputRef = right ? rightInputRef : leftInputRef;\n\n    if (textInputRef) {\n      textInputRef.nativeValue = textInputRef.getFormattedValue(value);\n    }\n  }\n\n};\n\nTuiInputRangeComponent.ɵfac = function TuiInputRangeComponent_Factory(t) {\n  return new (t || TuiInputRangeComponent)(ɵngcc0.ɵɵdirectiveInject(NgControl, 10), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(TUI_IS_MOBILE), ɵngcc0.ɵɵdirectiveInject(TUI_TEXTFIELD_APPEARANCE), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(TUI_TEXTFIELD_WATCHED_CONTROLLER), ɵngcc0.ɵɵdirectiveInject(TuiNewRangeDirective, 8));\n};\n\nTuiInputRangeComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n  type: TuiInputRangeComponent,\n  selectors: [[\"tui-input-range\"]],\n  viewQuery: function TuiInputRangeComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵviewQuery(TuiRangeComponent, 5);\n      ɵngcc0.ɵɵviewQuery(TuiInputNumberComponent, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.rangeRef = _t.first);\n      ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputNumberRefs = _t);\n    }\n  },\n  hostVars: 4,\n  hostBindings: function TuiInputRangeComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵclassProp(\"_show-ticks-labels\", !ctx.isNew)(\"_label-outside\", ctx.legacyLabelOutside);\n    }\n  },\n  inputs: {\n    min: \"min\",\n    max: \"max\",\n    quantum: \"quantum\",\n    steps: \"steps\",\n    segments: \"segments\",\n    keySteps: \"keySteps\",\n    leftValueContent: \"leftValueContent\",\n    rightValueContent: \"rightValueContent\"\n  },\n  features: [ɵngcc0.ɵɵProvidersFeature([{\n    provide: TUI_FOCUSABLE_ITEM_ACCESSOR,\n    useExisting: forwardRef(() => TuiInputRangeComponent_1)\n  }, TEXTFIELD_CONTROLLER_PROVIDER]), ɵngcc0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 14,\n  vars: 40,\n  consts: [[1, \"t-wrapper\", 3, \"appearance\", \"readOnly\", \"disabled\", \"focused\", \"hovered\", \"invalid\", \"tuiActiveZoneChange\"], [\"tuiTextfieldAppearance\", \"none\", \"automation-id\", \"tui-input-range__left-input\", 1, \"t-left\", \"t-text-input\", 3, \"min\", \"max\", \"precision\", \"decimal\", \"postfix\", \"disabled\", \"readOnly\", \"tuiTextfieldSize\", \"tuiTextfieldLabelOutside\", \"ngModel\", \"ngModelChange\", \"focusedChange\", \"keydown.arrowUp\", \"keydown.arrowDown\"], [\"polymorpheus-outlet\", \"\", 3, \"content\", \"context\", 4, \"ngIf\"], [1, \"t-right\"], [\"tuiTextfieldAppearance\", \"none\", \"automation-id\", \"tui-input-range__right-input\", 1, \"t-text-input\", 3, \"min\", \"max\", \"precision\", \"decimal\", \"disabled\", \"readOnly\", \"tuiTextfieldSize\", \"tuiTextfieldLabelOutside\", \"ngModel\", \"ngModelChange\", \"focusedChange\", \"keydown.arrowUp\", \"keydown.arrowDown\"], [\"automation-id\", \"tui-input-range__pluralize-right\", \"class\", \"t-pluralize-right\", 4, \"ngIf\"], [1, \"t-slider\", 3, \"min\", \"max\", \"steps\", \"segments\", \"keySteps\", \"pluralize\", \"focusable\", \"disabled\", \"ngModel\", \"ngModelChange\", \"tuiPressedChange\", \"touchend\", \"activeThumbChange\"], [\"legacyMinLabel\", \"\"], [\"legacyMaxLabel\", \"\"], [\"polymorpheus-outlet\", \"\", 3, \"content\", \"context\"], [\"automation-id\", \"tui-input-range__pluralize-right\", 1, \"t-pluralize-right\"], [4, \"ngIf\"]],\n  template: function TuiInputRangeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵprojectionDef();\n      ɵngcc0.ɵɵelementStart(0, \"tui-wrapper\", 0);\n      ɵngcc0.ɵɵlistener(\"tuiActiveZoneChange\", function TuiInputRangeComponent_Template_tui_wrapper_tuiActiveZoneChange_0_listener($event) {\n        return ctx.onActiveZone($event);\n      });\n      ɵngcc0.ɵɵelementStart(1, \"tui-input-number\", 1);\n      ɵngcc0.ɵɵlistener(\"ngModelChange\", function TuiInputRangeComponent_Template_tui_input_number_ngModelChange_1_listener($event) {\n        return ctx.onInputLeft($event);\n      })(\"focusedChange\", function TuiInputRangeComponent_Template_tui_input_number_focusedChange_1_listener($event) {\n        return ctx.onTextInputFocused($event, false);\n      })(\"keydown.arrowUp\", function TuiInputRangeComponent_Template_tui_input_number_keydown_arrowUp_1_listener($event) {\n        return ctx.changeByStep($event, [1, 0]);\n      })(\"keydown.arrowDown\", function TuiInputRangeComponent_Template_tui_input_number_keydown_arrowDown_1_listener($event) {\n        return ctx.changeByStep($event, [-1, 0]);\n      });\n      ɵngcc0.ɵɵpipe(2, \"i18nPlural\");\n      ɵngcc0.ɵɵprojection(3);\n      ɵngcc0.ɵɵtemplate(4, TuiInputRangeComponent_div_4_Template, 1, 4, \"div\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(5, \"div\", 3);\n      ɵngcc0.ɵɵelementStart(6, \"tui-input-number\", 4);\n      ɵngcc0.ɵɵlistener(\"ngModelChange\", function TuiInputRangeComponent_Template_tui_input_number_ngModelChange_6_listener($event) {\n        return ctx.onInputRight($event);\n      })(\"focusedChange\", function TuiInputRangeComponent_Template_tui_input_number_focusedChange_6_listener($event) {\n        return ctx.onTextInputFocused($event, true);\n      })(\"keydown.arrowUp\", function TuiInputRangeComponent_Template_tui_input_number_keydown_arrowUp_6_listener($event) {\n        return ctx.changeByStep($event, [0, 1]);\n      })(\"keydown.arrowDown\", function TuiInputRangeComponent_Template_tui_input_number_keydown_arrowDown_6_listener($event) {\n        return ctx.changeByStep($event, [0, -1]);\n      });\n      ɵngcc0.ɵɵtemplate(7, TuiInputRangeComponent_div_7_Template, 1, 4, \"div\", 2);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(8, TuiInputRangeComponent_span_8_Template, 3, 4, \"span\", 5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementStart(9, \"tui-range\", 6);\n      ɵngcc0.ɵɵlistener(\"ngModelChange\", function TuiInputRangeComponent_Template_tui_range_ngModelChange_9_listener($event) {\n        return ctx.onRangeValue($event);\n      })(\"tuiPressedChange\", function TuiInputRangeComponent_Template_tui_range_tuiPressedChange_9_listener() {\n        return ctx.focusToTextInput();\n      })(\"touchend\", function TuiInputRangeComponent_Template_tui_range_touchend_9_listener() {\n        return ctx.blurRange();\n      })(\"activeThumbChange\", function TuiInputRangeComponent_Template_tui_range_activeThumbChange_9_listener($event) {\n        return ctx.onActiveThumbChange($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(10, TuiInputRangeComponent_ng_template_10_Template, 2, 2, \"ng-template\", null, 7, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(12, TuiInputRangeComponent_ng_template_12_Template, 2, 2, \"ng-template\", null, 8, ɵngcc0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"appearance\", ctx.appearance)(\"readOnly\", ctx.readOnly)(\"disabled\", ctx.disabled)(\"focused\", ctx.computedFocused)(\"hovered\", ctx.computedHovered)(\"invalid\", ctx.computedInvalid);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"min\", ctx.min)(\"max\", ctx.value[1])(\"precision\", ctx.precision)(\"decimal\", ctx.decimal)(\"postfix\", ctx.pluralizeMap && !ctx.showLeftValueContent ? ɵngcc0.ɵɵpipeBind2(2, 37, ctx.value[0], ctx.pluralizeMap) : \"\")(\"disabled\", ctx.computedDisabled)(\"readOnly\", ctx.readOnly)(\"tuiTextfieldSize\", ctx.computedSize)(\"tuiTextfieldLabelOutside\", ctx.legacyLabelOutside)(\"ngModel\", ctx.value[0]);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showLeftValueContent);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"min\", ctx.value[0])(\"max\", ctx.max)(\"precision\", ctx.precision)(\"decimal\", ctx.decimal)(\"disabled\", ctx.computedDisabled)(\"readOnly\", ctx.readOnly)(\"tuiTextfieldSize\", ctx.computedSize)(\"tuiTextfieldLabelOutside\", ctx.legacyLabelOutside)(\"ngModel\", ctx.value[1]);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showRightValueContent);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.showRightValueContent && ctx.pluralizeMap);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"min\", ctx.min)(\"max\", ctx.max)(\"steps\", ctx.computedSteps)(\"segments\", ctx.segments)(\"keySteps\", ctx.keySteps)(\"pluralize\", ctx.segmentsPluralizeMap)(\"focusable\", false)(\"disabled\", ctx.readOnly || ctx.disabled)(\"ngModel\", ctx.value);\n    }\n  },\n  directives: function () {\n    return [ɵngcc1.TuiWrapperDirective, ɵngcc2.TuiActiveZoneDirective, ɵngcc3.TuiInputNumberComponent, ɵngcc3.TuiInputNumberDirective, TuiTextfieldAppearanceDirective, ɵngcc1.TuiTextfieldSizeDirective, ɵngcc1.TuiTextfieldLabelOutsideDirective, ɵngcc4.NgControlStatus, ɵngcc4.NgModel, ɵngcc5.NgIf, ɵngcc6.PolymorpheusOutletComponent, ɵngcc7.TuiRangeComponent, ɵngcc7.TuiRangeChangeDirective, ɵngcc2.TuiPressedDirective];\n  },\n  pipes: function () {\n    return [ɵngcc5.I18nPluralPipe];\n  },\n  styles: [\".t-wrapper[_ngcontent-%COMP%]{position:relative}.t-left[_ngcontent-%COMP%]{width:100%}.t-right[_ngcontent-%COMP%]{position:absolute;right:0;top:0;display:flex;width:50%;height:100%;text-align:right}.t-right[_ngcontent-%COMP%]   .t-text-input[_ngcontent-%COMP%]{flex:1}.t-text-input[_ngcontent-%COMP%]{text-align:inherit}.t-pluralize-right[_ngcontent-%COMP%]{display:flex;align-items:center;padding:1.125rem var(--tui-padding-m) 0 0;margin-left:-.75rem;font:var(--tui-font-text-s)}[data-size='l'][_nghost-%COMP%]   .t-pluralize-right[_ngcontent-%COMP%]{font:var(--tui-font-text-m);padding-top:1.25rem;margin-left:-1rem;padding-right:var(--tui-padding-l)}._label-outside[_nghost-%COMP%]   .t-pluralize-right[_ngcontent-%COMP%]{padding-top:0}._disabled[_nghost-%COMP%]   .t-pluralize-right[_ngcontent-%COMP%]{color:var(--tui-text-03)}[_nghost-%COMP%]{display:block;border-radius:var(--tui-radius-m)}._show-ticks-labels._segmented[_nghost-%COMP%]{border-bottom:26px solid transparent}.t-slider[_ngcontent-%COMP%]{position:absolute;top:100%;left:0;right:0;z-index:1;margin:-.125rem 0 0;background:0 0}\"],\n  changeDetection: 0\n});\n\nTuiInputRangeComponent.ctorParameters = () => [{\n  type: NgControl,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Self\n  }, {\n    type: Inject,\n    args: [NgControl]\n  }]\n}, {\n  type: ChangeDetectorRef,\n  decorators: [{\n    type: Inject,\n    args: [ChangeDetectorRef]\n  }]\n}, {\n  type: Boolean,\n  decorators: [{\n    type: Inject,\n    args: [TUI_IS_MOBILE]\n  }]\n}, {\n  type: String,\n  decorators: [{\n    type: Inject,\n    args: [TUI_TEXTFIELD_APPEARANCE]\n  }]\n}, {\n  type: ElementRef,\n  decorators: [{\n    type: Inject,\n    args: [ElementRef]\n  }]\n}, {\n  type: TuiTextfieldController,\n  decorators: [{\n    type: Inject,\n    args: [TUI_TEXTFIELD_WATCHED_CONTROLLER]\n  }]\n}, {\n  type: TuiNewRangeDirective,\n  decorators: [{\n    type: Optional\n  }, {\n    type: Inject,\n    args: [TuiNewRangeDirective]\n  }]\n}];\n\n__decorate([ViewChildren(TuiInputNumberComponent)], TuiInputRangeComponent.prototype, \"inputNumberRefs\", void 0);\n\n__decorate([ViewChild(TuiRangeComponent)], TuiInputRangeComponent.prototype, \"rangeRef\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiInputRangeComponent.prototype, \"min\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiInputRangeComponent.prototype, \"max\", void 0);\n\n__decorate([Input(), tuiDefaultProp(quantumAssertion, 'Quantum must be positive')], TuiInputRangeComponent.prototype, \"quantum\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiInputRangeComponent.prototype, \"steps\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiInputRangeComponent.prototype, \"segments\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiInputRangeComponent.prototype, \"keySteps\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiInputRangeComponent.prototype, \"leftValueContent\", void 0);\n\n__decorate([Input(), tuiDefaultProp()], TuiInputRangeComponent.prototype, \"rightValueContent\", void 0);\n\n__decorate([HostBinding('class._label-outside')], TuiInputRangeComponent.prototype, \"legacyLabelOutside\", null);\n\nTuiInputRangeComponent = TuiInputRangeComponent_1 = __decorate([__param(0, Optional()), __param(0, Self()), __param(0, Inject(NgControl)), __param(1, Inject(ChangeDetectorRef)), __param(2, Inject(TUI_IS_MOBILE)), __param(3, Inject(TUI_TEXTFIELD_APPEARANCE)), __param(4, Inject(ElementRef)), __param(5, Inject(TUI_TEXTFIELD_WATCHED_CONTROLLER)), __param(6, Optional()), __param(6, Inject(TuiNewRangeDirective))], TuiInputRangeComponent);\n\nfunction tuiTextfieldAppearanceDirectiveFactory({\n  nativeElement\n}) {\n  return nativeElement.getAttribute('tuiTextfieldAppearance');\n}\n\nlet TuiTextfieldAppearanceDirective = /*#__PURE__*/(() => {\n  let TuiTextfieldAppearanceDirective = class TuiTextfieldAppearanceDirective {};\n\n  TuiTextfieldAppearanceDirective.ɵfac = function TuiTextfieldAppearanceDirective_Factory(t) {\n    return new (t || TuiTextfieldAppearanceDirective)();\n  };\n\n  TuiTextfieldAppearanceDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: TuiTextfieldAppearanceDirective,\n    selectors: [[\"\", \"tuiTextfieldAppearance\", \"\"]],\n    features: [ɵngcc0.ɵɵProvidersFeature([{\n      provide: TUI_TEXTFIELD_APPEARANCE,\n      deps: [ElementRef],\n      useFactory: tuiTextfieldAppearanceDirectiveFactory\n    }])]\n  });\n  return TuiTextfieldAppearanceDirective;\n})();\nlet TuiInputRangeModule = /*#__PURE__*/(() => {\n  let TuiInputRangeModule = class TuiInputRangeModule {};\n\n  TuiInputRangeModule.ɵfac = function TuiInputRangeModule_Factory(t) {\n    return new (t || TuiInputRangeModule)();\n  };\n\n  TuiInputRangeModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TuiInputRangeModule\n  });\n  TuiInputRangeModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule, PolymorpheusModule, TuiActiveZoneModule, TuiInputNumberModule, TuiPressedModule, TuiRangeModule, TuiTextfieldControllerModule, TuiWrapperModule]]\n  });\n  return TuiInputRangeModule;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TuiInputRangeModule, {\n    declarations: function () {\n      return [TuiInputRangeComponent, TuiTextfieldAppearanceDirective];\n    },\n    imports: function () {\n      return [CommonModule, FormsModule, ReactiveFormsModule, PolymorpheusModule, TuiActiveZoneModule, TuiInputNumberModule, TuiPressedModule, TuiRangeModule, TuiTextfieldControllerModule, TuiWrapperModule];\n    },\n    exports: function () {\n      return [TuiInputRangeComponent, TuiNewRangeDirective];\n    }\n  });\n})();\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { TuiInputRangeComponent, TuiInputRangeModule, TuiTextfieldAppearanceDirective, tuiTextfieldAppearanceDirectiveFactory }; //# sourceMappingURL=taiga-ui-kit-components-input-range.js.map","map":null,"metadata":{},"sourceType":"module"}